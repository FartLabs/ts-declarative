import type { Opts } from "oazapfts";
import { generateSource } from "oazapfts";
import type { Class } from "#/lib/declarative/declarative.ts";
import { getPrototypeValue } from "#/lib/declarative/declarative.ts";
import type { ValueOpenAPI } from "#/lib/declarative/common/openapi/openapi.ts";

/**
 * generateOazapftsClientOf returns the source code generated by Oazapfts.
 *
 * @example
 * ```ts
 * @standardCreate()
 * @standardGet()
 * @autoSchema()
 * class Person {
 *   public constructor(public name: string) {}
 * }
 *
 * @openapi({
 *  specification: {
 *    openapi: "3.0.1",
 *    info: { title: "App", version: "0.0.1" },
 *    components: {},
 *  },
 *  resources: [Person],
 * })
 * class App {}
 *
 * const sourceCode = await generateOazapftsClientOf(App);
 * await Deno.writeTextFile("client.ts", sourceCode);
 * ```
 */
export async function generateOazapftsClientOf(
  target: Class,
  options?: OazapftsOptions,
): Promise<string | undefined> {
  return await generateSource(
    getPrototypeValue<ValueOpenAPI>(target)
      ?.specification as unknown as string,
    options,
  );
}

/**
 * OazapftsOptions is the options for the Oazapfts decorator.
 */
export type OazapftsOptions = Opts;
